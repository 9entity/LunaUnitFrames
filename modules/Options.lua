local Addon = select(1, ...)

local AceConfigRegistry = LibStub("AceConfigRegistry-3.0")
local AceConfigDialog = LibStub("AceConfigDialog-3.0")

local SML = SML or LibStub:GetLibrary("LibSharedMedia-3.0")

local L = LunaUF.L

local UnitToFrame = {
	["none"] = "UIParent",
	["player"] = "LUFUnitplayer",
	["pet"] = "LUFUnitpet",
	["pettarget"] = "LUFUnitpettarget",
	["target"] = "LUFUnittarget",
	["targettarget"] = "LUFUnittargettarget",
	["targettargettarget"] = "LUFUnittargettargettarget",
	["party"] = "LUFHeaderparty",
	["partytarget"] = "LUFHeaderpartytarget",
	["partypet"] = "LUFHeaderpartypet",
	["raid1"] = "LUFHeaderraid1",
	["raid2"] = "LUFHeaderraid2",
	["raid3"] = "LUFHeaderraid3",
	["raid4"] = "LUFHeaderraid4",
	["raid5"] = "LUFHeaderraid5",
	["raid6"] = "LUFHeaderraid6",
	["raid7"] = "LUFHeaderraid7",
	["raid8"] = "LUFHeaderraid8",
	["raidpet"] = "LUFHeaderraidpet",
	["maintank"] = "LUFHeadermaintank",
	["maintanktarget"] = "LUFHeadermaintanktarget",
	["mainassist"] = "LUFHeadermainassist",
	["mainassisttarget"] = "LUFHeadermainassisttarget",
}

function LunaUF:CreateConfig()

	local function set(info, value)
		local db = LunaUF.db.profile
		for i=1, #info-1 do
			db = db[info[i]]
		end
		if value ~= db[info[#info]] then
			db[info[#info]] = value
		end
	end

	local function get(info)
		local db = LunaUF.db.profile
		for i=1, (#info-1) do
			db = db[info[i]]
		end
		return db[info[#info]]
	end

	local function nbrValidate(info, value)
		if strmatch(value, "^%-?%d*%.?%d*$") then
			return true
		else
			return L["Not a valid number."]
		end
	end

	local function setGeneral(info, value)
		LunaUF.db.profile[info[#info]] = value
		if info.arg then
			LunaUF[info.arg](LunaUF)
		end
	end

	local function getGeneral(info)
		return LunaUF.db.profile[info[#info]]
	end

	local function setColor(info, r, g, b)
		local db = LunaUF.db.profile.colors[info[#info]]
		db.r = r
		db.g = g
		db.b = b
		LunaUF.Layout:Reload()
	end

	local function getColor(info)
		local db = LunaUF.db.profile.colors[info[#info]]
		return db.r, db.g ,db.b
	end

	local MediaList = {}
	local function getMediaData(info)
		local mediaType = info[#(info)]

		MediaList[mediaType] = MediaList[mediaType] or {}

		for k in pairs(MediaList[mediaType]) do	MediaList[mediaType][k] = nil end
		for _, name in pairs(SML:List(mediaType)) do
			MediaList[mediaType][name] = name
		end
		
		return MediaList[mediaType]
	end

	local function Lockdown() return LunaUF.InCombatLockdown end

	local function deepAnchorCheck(tbl)
		local inserted
		for frame in pairs(tbl) do
			for key,value in pairs(LunaUF.db.profile.units) do
				if key == "raid" then
					for k,v in pairs(LunaUF.db.profile.units.raid.positions) do
						if v.anchorTo == frame and not tbl[UnitToFrame["raid"..k]] then
							tbl[UnitToFrame["raid"..k]] = true
							inserted = true
						end
					end
				else
					if value.anchorTo == frame and not tbl[UnitToFrame[key]] then
						tbl[UnitToFrame[key]] = true
						inserted = true
					end
				end
			end
		end
		if inserted then
			return deepAnchorCheck(tbl)
		else
			return tbl
		end
	end

	local function getAnchors(info)
		local unit
		if info[2] == "raid" then
			unit = info[3]
		else
			unit = info[2]
		end
		local tbl = {
				["UIParent"]=L["None"],
				["LUFUnitplayer"]=L["player"],
				["LUFUnitpet"]=L["pet"],
				["LUFUnitpettarget"]=L["pettarget"],
				["LUFUnittarget"]=L["target"],
				["LUFUnittargettarget"]=L["targettarget"],
				["LUFUnittargettargettarget"]=L["targettargettarget"],
				["LUFHeaderparty"]=L["party"],
				["LUFHeaderpartytarget"]=L["partytarget"],
				["LUFHeaderpartypet"]=L["partypet"],
				["LUFHeaderraid1"]=(L["raid"].."1"),
				["LUFHeaderraid2"]=(L["raid"].."2"),
				["LUFHeaderraid3"]=(L["raid"].."3"),
				["LUFHeaderraid4"]=(L["raid"].."4"),
				["LUFHeaderraid5"]=(L["raid"].."5"),
				["LUFHeaderraid6"]=(L["raid"].."6"),
				["LUFHeaderraid7"]=(L["raid"].."7"),
				["LUFHeaderraid8"]=(L["raid"].."8"),
				["LUFHeaderraidpet"]=L["raidpet"],
				["LUFHeadermaintank"]=L["maintank"],
				["LUFHeadermaintanktarget"]=L["maintanktarget"],
				["LUFHeadermainassist"]=L["mainassist"],
				["LUFHeadermainassisttarget"]=L["mainassisttarget"],
			}
		for key in pairs(deepAnchorCheck({[UnitToFrame[unit]]=true})) do
			tbl[key] = nil
		end
		return tbl
	end

	local function SetAnchorTo(info, value)
		local frame
		if info[#info-1] == "raid" then
			local nbr = strmatch(info[#info], "%d")
			LunaUF.db.profile.units.raid.positions[tonumber(nbr)].anchorTo = value
			frame = select(1,_G[UnitToFrame[info[#info]]]:GetChildren())
		else
			set(info, value)
			frame = _G[UnitToFrame[info[#info-1]]]
		end
		frame:GetScript("OnDragStop")(frame)
	end

	local aceoptions = {
		name = "Luna Unit Frames",
		type = "group",
		get = get,
		set = set,
		args = {
			general = {
				name = L["General"],
				type = "group",
				order = 1,
				get = getGeneral,
				set = setGeneral,
				args = {
					locked = {
						name = L["Lock"],
						desc = L["Lock the frames"],
						type = "toggle",
						order = 1,
						disabled = Lockdown,
						set = function(info, value) setGeneral(info, value) LunaUF.modules.movers:Update() end,
					},
					tooltipCombat = {
						name = L["Tooltip in Combat"],
						desc = L["Show unitframe tooltips in combat"],
						type = "toggle",
						order = 2,
					},
					headerGlobalSettings = {
						name = L["Global Unit Settings"],
						type = "header",
						order = 3,
					},
					statusbar = {
						order = 4,
						type = "select",
						name = L["Bar texture"],
						dialogControl = "LSM30_Statusbar",
						values = getMediaData,
						set = function(info, value) setGeneral(info, value) LunaUF.Layout:Reload() end,
					},
				},
			},
			colors = {
				name = L["Colors"],
				type = "group",
				order = 2,
				get = getColor,
				set = setColor,
				args = {
					headerClassColors = {
						name = L["Class Colors"],
						type = "header",
						order = 1,
					},
					HUNTER = {
						name = L["Hunter"],
						type = "color",
						order = 2,
						width = "half",
					},
					WARLOCK = {
						name = L["Warlock"],
						type = "color",
						order = 3,
						width = "half",
					},
					PRIEST = {
						name = L["Priest"],
						type = "color",
						order = 4,
						width = "half",
					},
					PALADIN = {
						name = L["Paladin"],
						type = "color",
						order = 5,
						width = "half",
					},
					MAGE = {
						name = L["Mage"],
						type = "color",
						order = 6,
						width = "half",
					},
					ROGUE = {
						name = L["Rogue"],
						type = "color",
						order = 7,
						width = "half",
					},
					DRUID = {
						name = L["Druid"],
						type = "color",
						order = 8,
						width = "half",
					},
					SHAMAN = {
						name = L["Shaman"],
						type = "color",
						order = 9,
						width = "half",
					},
					WARRIOR = {
						name = L["Warrior"],
						type = "color",
						order = 10,
						width = "half",
					},
					PET = {
						name = L["Pet"],
						type = "color",
						order = 11,
						width = "half",
					},
					headerPowerColors = {
						name = L["Power Colors"],
						type = "header",
						order = 12,
					},
					MANA = {
						name = L["Mana"],
						type = "color",
						order = 13,
						width = "half",
					},
					RAGE = {
						name = L["Rage"],
						type = "color",
						order = 14,
						width = "half",
					},
					FOCUS = {
						name = L["Focus"],
						type = "color",
						order = 15,
						width = "half",
					},
					ENERGY = {
						name = L["Energy"],
						type = "color",
						order = 16,
						width = "half",
					},
					COMBOPOINTS = {
						name = L["Combopoints"],
						type = "color",
						order = 17,
					},
					headerReactionColors = {
						name = L["Reaction Colors"],
						type = "header",
						order = 18,
					},
					tapped = {
						name = L["Tapped"],
						type = "color",
						order = 19,
						width = "half",
					},
					red = {
						name = L["Red"],
						type = "color",
						order = 20,
						width = "half",
					},
					green = {
						name = L["Green"],
						type = "color",
						order = 21,
						width = "half",
					},
					static = {
						name = L["Static"],
						type = "color",
						order = 22,
						width = "half",
					},
					yellow = {
						name = L["Yellow"],
						type = "color",
						order = 23,
						width = "half",
					},
					incheal = {
						name = L["Inc Heal"],
						type = "color",
						order = 24,
						width = "half",
					},
					enemyUnattack = {
						name = L["Enemy Unattackable"],
						type = "color",
						order = 25,
					},
					hostile = {
						name = L["Hostile"],
						type = "color",
						order = 26,
						width = "half",
					},
					aggro = {
						name = L["Aggro"],
						type = "color",
						order = 27,
						width = "half",
					},
					friendly = {
						name = L["Friendly"],
						type = "color",
						order = 28,
						width = "half",
					},
					neutral = {
						name = L["Neutral"],
						type = "color",
						order = 29,
						width = "half",
					},
					offline = {
						name = L["Offline"],
						type = "color",
						order = 30,
						width = "half",
					},
					headerCastColors = {
						name = L["Cast Colors"],
						type = "header",
						order = 31,
					},
					channel = {
						name = L["Channel"],
						type = "color",
						order = 32,
						width = "half",
					},
					cast = {
						name = L["Cast"],
						type = "color",
						order = 33,
						width = "half",
					},
					headerXPColors = {
						name = L["XP Colors"],
						type = "header",
						order = 34,
					},
					normal = {
						name = L["Normal"],
						type = "color",
						order = 35,
						width = "half",
					},
					rested = {
						name = L["Rested"],
						type = "color",
						order = 36,
						width = "half",
					},
					headerAuraColors = {
						name = L["Aura Colors"],
						type = "header",
						order = 37,
					},
					removable = {
						name = L["Removable"],
						type = "color",
						order = 38,
					},
				},
			},
			units = {
				name = L["Units"],
				type = "group",
				order = 3,
				childGroups = "tab",
				args = {
					player = {
						name = L["player"],
						type = "group",
						order = 1,
						set = function(info, value) set(info, value) LunaUF.Layout:Reload("player") end,
						args = {
							enabled = {
								name = L["Enable"],
								desc = string.format(L["Enable the %s frame(s)"], L["player"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["player"].x) end,
								set = function(info, value) LunaUF.db.profile.units["player"].x = tonumber(value) LunaUF.Layout:Reload("player") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["player"].y) end,
								set = function(info, value) LunaUF.db.profile.units["player"].y = tonumber(value) LunaUF.Layout:Reload("player") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					pet = {
						name = L["pet"],
						type = "group",
						order = 2,
						arg = LunaUF.db.profile.units.pet,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["pet"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["pet"].x) end,
								set = function(info, value) LunaUF.db.profile.units["pet"].x = tonumber(value) LunaUF.Layout:Reload("pet") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["pet"].y) end,
								set = function(info, value) LunaUF.db.profile.units["pet"].y = tonumber(value) LunaUF.Layout:Reload("pet") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					pettarget = {
						name = L["pettarget"],
						type = "group",
						order = 3,
						arg = LunaUF.db.profile.units.pettarget,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["pettarget"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["pettarget"].x) end,
								set = function(info, value) LunaUF.db.profile.units["pettarget"].x = tonumber(value) LunaUF.Layout:Reload("pettarget") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["pettarget"].y) end,
								set = function(info, value) LunaUF.db.profile.units["pettarget"].y = tonumber(value) LunaUF.Layout:Reload("pettarget") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					target = {
						name = L["target"],
						type = "group",
						order = 4,
						arg = LunaUF.db.profile.units.target,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["target"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["target"].x) end,
								set = function(info, value) LunaUF.db.profile.units["target"].x = tonumber(value) LunaUF.Layout:Reload("target") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["target"].y) end,
								set = function(info, value) LunaUF.db.profile.units["target"].y = tonumber(value) LunaUF.Layout:Reload("target") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					targettarget = {
						name = L["targettarget"],
						type = "group",
						order = 5,
						arg = LunaUF.db.profile.units.targettarget,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["targettarget"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["targettarget"].x) end,
								set = function(info, value) LunaUF.db.profile.units["targettarget"].x = tonumber(value) LunaUF.Layout:Reload("targettarget") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["targettarget"].y) end,
								set = function(info, value) LunaUF.db.profile.units["targettarget"].y = tonumber(value) LunaUF.Layout:Reload("targettarget") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					targettargettarget = {
						name = L["targettargettarget"],
						type = "group",
						order = 6,
						arg = LunaUF.db.profile.units.targettargettarget,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["targettargettarget"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["targettargettarget"].x) end,
								set = function(info, value) LunaUF.db.profile.units["targettargettarget"].x = tonumber(value) LunaUF.Layout:Reload("targettargettarget") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["targettargettarget"].y) end,
								set = function(info, value) LunaUF.db.profile.units["targettargettargettarget"].y = tonumber(value) LunaUF.Layout:Reload("targettargettarget") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					party = {
						name = L["party"],
						type = "group",
						order = 7,
						arg = LunaUF.db.profile.units.party,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["party"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["party"].x) end,
								set = function(info, value) LunaUF.db.profile.units["party"].x = tonumber(value) LunaUF.Units:ReloadHeader("party") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["party"].y) end,
								set = function(info, value) LunaUF.db.profile.units["party"].y = tonumber(value) LunaUF.Units:ReloadHeader("party") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					partytarget = {
						name = L["partytarget"],
						type = "group",
						order = 8,
						arg = LunaUF.db.profile.units.partytarget,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["partytarget"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["partytarget"].x) end,
								set = function(info, value) LunaUF.db.profile.units["partytarget"].x = tonumber(value) LunaUF.Units:ReloadHeader("partytarget") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["partytarget"].y) end,
								set = function(info, value) LunaUF.db.profile.units["partytarget"].y = tonumber(value) LunaUF.Units:ReloadHeader("partytarget") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					partypet = {
						name = L["partypet"],
						type = "group",
						order = 9,
						arg = LunaUF.db.profile.units.partypet,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["partypet"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["partypet"].x) end,
								set = function(info, value) LunaUF.db.profile.units["partypet"].x = tonumber(value) LunaUF.Units:ReloadHeader("partypet") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["partypet"].y) end,
								set = function(info, value) LunaUF.db.profile.units["partypet"].y = tonumber(value) LunaUF.Units:ReloadHeader("partypet") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					raid = {
						name = L["raid"],
						type = "group",
						order = 10,
						arg = LunaUF.db.profile.units.raid,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["raid"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							headerraid1 = {
								name = L["raid"].."1",
								type = "header",
								order = 6,
							},
							raid1 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 7,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[1].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x1 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 8,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[1].x) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[1].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y1 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 9,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[1].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[1].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							headerraid2 = {
								name = L["raid"].."2",
								type = "header",
								order = 10,
							},
							raid2 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 11,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[2].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x2 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 12,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[2].x) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[2].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y2 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 13,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[2].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[2].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							headerraid3 = {
								name = L["raid"].."3",
								type = "header",
								order = 14,
							},
							raid3 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 15,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[3].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x3 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 16,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[3].x) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[3].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y3 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 17,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[3].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[3].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							headerraid4 = {
								name = L["raid"].."4",
								type = "header",
								order = 18,
							},
							raid4 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 19,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[4].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x4 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 20,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[4].x) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[4].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y4 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 21,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[4].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[4].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							headerraid5 = {
								name = L["raid"].."5",
								type = "header",
								order = 22,
							},
							raid5 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 23,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[5].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x5 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 24,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[5].x) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[5].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y5 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 25,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[5].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[5].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							headerraid6 = {
								name = L["raid"].."6",
								type = "header",
								order = 26,
							},
							raid6 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 27,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[6].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x6 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 28,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[6].x) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[6].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y6 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 29,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[6].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[6].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							headerraid7 = {
								name = L["raid"].."7",
								type = "header",
								order = 30,
							},
							raid7 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 31,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[7].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x7 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 32,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[7].x) end,
								set =  function(info, value) LunaUF.db.profile.units.raid.positions[7].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y7 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 33,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[7].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[7].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							headerraid8 = {
								name = L["raid"].."8",
								type = "header",
								order = 34,
							},
							raid8 = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 35,
								values = getAnchors,
								get = function() return LunaUF.db.profile.units.raid.positions[8].anchorTo end,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
							x8 = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 36,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[8].x) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[8].x = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
							y8 = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 37,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units.raid.positions[8].y) end,
								set = function(info, value) LunaUF.db.profile.units.raid.positions[8].y = tonumber(value) LunaUF.Units:ReloadHeader("raid") end,
								disabled = Lockdown,
							},
						},
					},
					raidpet = {
						name = L["raidpet"],
						type = "group",
						order = 11,
						arg = LunaUF.db.profile.units.raidpet,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["raidpet"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["raidpet"].x) end,
								set = function(info, value) LunaUF.db.profile.units["raidpet"].x = tonumber(value) LunaUF.Units:ReloadHeader("raidpet") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["raidpet"].y) end,
								set = function(info, value) LunaUF.db.profile.units["raidpet"].y = tonumber(value) LunaUF.Units:ReloadHeader("raidpet") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					maintank = {
						name = L["maintank"],
						type = "group",
						order = 12,
						arg = LunaUF.db.profile.units.maintank,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["maintank"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["maintank"].x) end,
								set = function(info, value) LunaUF.db.profile.units["maintank"].x = tonumber(value) LunaUF.Units:ReloadHeader("maintank") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["maintank"].y) end,
								set = function(info, value) LunaUF.db.profile.units["maintank"].y = tonumber(value) LunaUF.Units:ReloadHeader("maintank") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					maintanktarget = {
						name = L["maintanktarget"],
						type = "group",
						order = 13,
						arg = LunaUF.db.profile.units.maintanktarget,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["maintanktarget"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["maintanktarget"].x) end,
								set = function(info, value) LunaUF.db.profile.units["maintanktarget"].x = tonumber(value) LunaUF.Units:ReloadHeader("maintanktarget") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["maintanktarget"].y) end,
								set = function(info, value) LunaUF.db.profile.units["maintanktarget"].y = tonumber(value) LunaUF.Units:ReloadHeader("maintanktarget") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					mainassist = {
						name = L["mainassist"],
						type = "group",
						order = 14,
						arg = LunaUF.db.profile.units.mainassist,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["mainassist"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["mainassist"].x) end,
								set = function(info, value) LunaUF.db.profile.units["mainassist"].x = tonumber(value) LunaUF.Units:ReloadHeader("mainassist") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["mainassist"].y) end,
								set = function(info, value) LunaUF.db.profile.units["mainassist"].y = tonumber(value) LunaUF.Units:ReloadHeader("mainassist") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
					mainassisttarget = {
						name = L["mainassisttarget"],
						type = "group",
						order = 15,
						arg = LunaUF.db.profile.units.mainassisttarget,
						args = {
							enabled = {
								name = "Enable",
								desc = string.format(L["Enable the %s frame(s)"], L["mainassisttarget"]),
								type = "toggle",
								order = 1,
								disabled = Lockdown,
								set = function(info, value) set(info, value) LunaUF:LoadUnits() LunaUF.modules.movers:Update() end,
							},
							headerGeneralOptions = {
								name = L["General"],
								type = "header",
								order = 2,
							},
							height = {
								name = L["Height"],
								desc = L["Set the height of the frame."],
								type = "range",
								order = 3,
								min = 20,
								max = 200,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							width = {
								name = L["Width"],
								desc = L["Set the width of the frame."],
								type = "range",
								order = 4,
								min = 100,
								max = 400,
								step = 1,
								width = "full",
								disabled = Lockdown,
							},
							scale = {
								name = L["Scale"],
								desc = L["Set the scale of the frame."],
								type = "range",
								order = 5,
								min = 0.5,
								max = 3,
								step = 0.01,
								isPercent = true,
								width = "double",
								disabled = Lockdown,
							},
							x = {
								name = L["X Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 6,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["mainassisttarget"].x) end,
								set = function(info, value) LunaUF.db.profile.units["mainassisttarget"].x = tonumber(value) LunaUF.Units:ReloadHeader("mainassisttarget") end,
								disabled = Lockdown,
							},
							y = {
								name = L["Y Position"],
								desc = L["Set the position of the frame."],
								type = "input",
								order = 7,
								width = "half",
								validate = nbrValidate,
								get = function() return tostring(LunaUF.db.profile.units["mainassisttarget"].y) end,
								set = function(info, value) LunaUF.db.profile.units["mainassisttarget"].y = tonumber(value) LunaUF.Units:ReloadHeader("mainassisttarget") end,
								disabled = Lockdown,
							},
							anchorTo = {
								name = L["Anchor To"],
								desc = L["Anchor to another frame."],
								type = "select",
								order = 8,
								values = getAnchors,
								set = SetAnchorTo,
								disabled = Lockdown,
							},
						},
					},
				},
			},
			hidden = {
				name = L["Hide Blizzard"],
				type = "group",
				order = 4,
				set = function(info, value) set(info, value) LunaUF:HideBlizzardFrames() end,
				args = {
					help = {
						order = 1,
						type = "group",
						name = L["Hint"],
						inline = true,
						args = {
							description = {
								type = "description",
								name = L["You will need to do a /console reloadui before a hidden frame becomes visible again."],
								width = "full",
							},
						},
					},
					header = {
						name = "",
						order = 2,
					},
					player = {
						name = L["player"],
						desc = string.format(L["Hides the default %s frame"], L["player"]),
						type = "toggle",
						order = 3,
					},
					pet = {
						name = L["pet"],
						desc = string.format(L["Hides the default %s frame"], L["pet"]),
						type = "toggle",
						order = 4,
					},
					cast = {
						name = L["Cast Bar"],
						desc = string.format(L["Hides the default %s frame"], L["Cast Bar"]),
						type = "toggle",
						order = 5,
					},
					buffs = {
						name = L["Buffs"],
						desc = string.format(L["Hides the default %s frame"], L["Buffs"]),
						type = "toggle",
						order = 6,
					},
					target = {
						name = L["target"],
						desc = string.format(L["Hides the default %s frame"], L["target"]),
						type = "toggle",
						order = 7,
					},
					party = {
						name = L["party"],
						desc = string.format(L["Hides the default %s frame"], L["party"]),
						type = "toggle",
						order = 8,
					},
					raid = {
						name = L["raid"],
						desc = string.format(L["Hides the default %s frame"], L["raid"]),
						type = "toggle",
						order = 9,
					},
				},
			},
		},
	}
	AceConfigRegistry:RegisterOptionsTable(Addon, aceoptions, true)
	aceoptions.args.profile = LibStub("AceDBOptions-3.0"):GetOptionsTable(self.db)
	
	AceConfigDialog:AddToBlizOptions(Addon, nil, nil, "general")
	AceConfigDialog:AddToBlizOptions(Addon, "Colors", Addon, "colors")
	AceConfigDialog:AddToBlizOptions(Addon, "Units", Addon, "units")
	AceConfigDialog:AddToBlizOptions(Addon, "Hide Blizzard", Addon, "hidden")
	AceConfigDialog:AddToBlizOptions(Addon, "Profiles", Addon, "profile")
	
	AceConfigDialog:SetDefaultSize(Addon, 895, 570)
end